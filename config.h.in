/*
 * MRCPP, a numerical library based on multiresolution analysis and
 * the multiwavelet basis which provide low-scaling algorithms as well as
 * rigorous error control in numerical computations.
 * Copyright (C) 2019 Stig Rune Jensen, Jonas Juselius, Luca Frediani and contributors.
 *
 * This file is part of MRCPP.
 *
 * MRCPP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MRCPP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with MRCPP.  If not, see <https://www.gnu.org/licenses/>.
 *
 * For information on the complete list of contributors to MRCPP, see:
 * <https://mrcpp.readthedocs.io/>
 */

#include <cstdlib>
#include <string>

#define PROGRAM_VERSION "@PROGRAM_VERSION@"

#define GIT_REVISION "@GIT_REVISION@"

namespace mrcpp {
inline std::string get_mw_filter_dir() {
    auto ep = std::getenv("MRCPP_FILTER_DIR");
    if (ep != nullptr) { // If the user set the env-var then use that as filter directory
        return std::string(ep);
    } else { // Otherwise, build it up from where the library lives plus the build-tree/install-tree location
        auto mw_filter_dir = std::string("/@CMAKE_INSTALL_DATADIR@/@PROJECT_NAME@/mwfilters");
        std::string path = "";
        return path;
    }
}
} // namespace mrcpp

#define BLAS_H "@BLAS_H@"

#cmakedefine HAVE_MPI

#cmakedefine HAVE_OPENMP

#cmakedefine HAVE_BLAS
