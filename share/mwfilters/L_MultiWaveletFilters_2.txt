
Routine: Get_LegendreRoots():
 Read in quadrature of order: 3

Routine: Get_GaussLegendreWeights():
 Read in quadrature of order: 3

Routine: Get_GaussLegendreWeights():
 Read in quadrature of order: 5

Routine: Get_LegendreRoots():
 Read in quadrature of order: 5

*W->H0[0][] = 

7.0710678118654752440084436210484890e-01
0.0000000000000000000000000000000000e+00
-1.0213785928248336186278222110472850e-34

*W->H0[1][] = 

-6.1237243569579452454932101867647270e-01
3.5355339059327376220042218105242430e-01
5.9580417914781961086622962311091630e-35

*W->H0[2][] = 

0.0000000000000000000000000000000000e+00
-6.8465319688145764182121222850100230e-01
1.7677669529663688110021109052621220e-01

*W->G0[0][] = 

2.3570226039551584146694812070161680e-01
4.0824829046386301636621401245098090e-01
-5.2704627669472988866648225740545280e-01

*W->G0[1][] = 

-3.4045953094161120620927407034909500e-35
-1.7677669529663688110021109052621210e-01
-6.8465319688145764182121222850100300e-01

*W->G0[2][] = 

2.6352313834736494433324112870272640e-01
4.5643546458763842788080815233400210e-01
4.7140452079103168293389624140323210e-01

Checking the orthogonality conditions on the filters:
(see: Alpert, Beylkin, Gines, Vozovoi).
OBS: These filters should really be computed using extended precision.

The matrix identity: Id = (H0^T)H0+(G0^T)G0, has righthand side equal:

1e+00   2e-34   -5e-34   
2e-34   1e+00   5e-34   
-5e-34   5e-34   1e+00   

The matrix identity: Id = (H1^T)H1+(G1^T)G1, has righthand side equal:

1e+00   4e-34   -7e-34   
4e-34   1e+00   2e-34   
-7e-34   2e-34   1e+00   

The matrix identity: 0 = (H0^T)H1+(G0^T)G1, has righthand side equal:

2e-34   1e-34   5e-34   
2e-34   -2e-34   -5e-34   
-5e-34   -2e-34   -3e-34   
The size of double is: 8 bytes.
The size of long double is: 16 bytes.
