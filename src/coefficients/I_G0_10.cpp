/*
 * MRCPP, a numerical library based on multiresolution analysis and
 * the multiwavelet basis which provide low-scaling algorithms as well as
 * rigorous error control in numerical computations.
 * Copyright (C) 2019 Stig Rune Jensen, Jonas Juselius, Luca Frediani and contributors.
 *
 * This file is part of MRCPP.
 *
 * MRCPP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MRCPP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with MRCPP.  If not, see <https://www.gnu.org/licenses/>.
 *
 * For information on the complete list of contributors to MRCPP, see:
 * <https://mrcpp.readthedocs.io/>
 */

// THIS FILE HAS BEEN AUTOGENERATED, DO NOT TOUCH

#include "FilterData.h"

#include <Eigen/Core>


namespace mrcpp {
namespace detail {
auto get_I_G0_10() noexcept -> Eigen::Matrix<double, 11, 11> {
  return (Eigen::Matrix<double, 11, 11>() << -0.225932038228987, 0.345050031400674, -0.172585990759641, -0.164114888732491, 0.328108973965632, -0.0800132713926798, -0.274948287973483, 0.0938277265851239, 0.244495249784907, 0.121092052878838, 0.0166292168398951, -0.184919613287472, 0.334047063384484, -0.298486066239745, 0.0675311303343439, 0.224209557283992, -0.305227729469116, 0.0104171919096204, 0.274998279603606, 0.0297760279706642, -0.152068637219914, -0.131852055001393, 0.139836964982677, -0.285361177372134, 0.344213792270826, -0.267530293048216, 0.0445733549853581, 0.224238578798157, -0.281911362794056, -0.0390686574089167, 0.237217145937902, 0.137946629635975, 0.0196896310336599, 0.0931976376310753, -0.207810515209779, 0.302125008088643, -0.3451988834032, 0.287471996187229, -0.0866421270416646, -0.191941241799137, 0.253725753477379, 0.0977867181419318, -0.139723396412608, -0.131290234562885, -0.0504122789263942, 0.120239388766744, -0.199306358203796, 0.284167686509368, -0.352004436454398, 0.342086677434558, -0.164784663399514, -0.151986693589539, 0.20639689980069, 0.168400359957301, 0.0195977826054735, -0.0187937039769884, 0.0477412832679631, -0.0888698182086013, 0.151177499302617, -0.242289922912848, 0.351860386329414, -0.407928484517212, 0.246836408787338, 0.138906892509731, -0.111075797803708, -0.158550082428087, -0.00228033217465565, 0.00693911091710395, -0.0168033296704544, 0.0386341243861027, -0.0859100232151206, 0.180848008055294, -0.33733415905342, 0.473581031217399, -0.295809206196324, -0.171200293279425, -0.0565615804296075, 0.00235899263334278, -0.00546288771225938, 0.00841787806790644, -0.0098535975891233, 0.00472699288881305, 0.0226547432227799, -0.111950855261751, 0.319348574505958, -0.544517272027588, 0.250498688668228, 0.15967434831253, -0.00188302521580236, 0.00466186057406877, -0.0083585312326173, 0.0137087728252976, -0.0214222231124033, 0.0300970590062885, -0.025999135802902, -0.0506064100692391, 0.32931636937367, -0.621089228946587, 0.030234349965918, 0.000739142032326318, -0.00185588198038223, 0.00343737164665084, -0.00602606644501111, 0.0107687796147697, -0.0200518707781487, 0.0373838704291638, -0.05625393312369, -0.00937691026976714, 0.426026914502021, -0.559715033877, -0.000164545601988715, 0.000411100134802357, -0.000756915381077815, 0.00132861920722107, -0.00244144868375701, 0.00499652054135778, -0.0117632280944928, 0.0303796474735031, -0.0667897708090714, -0.00279741903042642, 0.703161819447387).finished();
}
} // namespace mrcpp
} // namespace detail
