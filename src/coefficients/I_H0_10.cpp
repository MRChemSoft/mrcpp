/*
 * MRCPP, a numerical library based on multiresolution analysis and
 * the multiwavelet basis which provide low-scaling algorithms as well as
 * rigorous error control in numerical computations.
 * Copyright (C) 2019 Stig Rune Jensen, Jonas Juselius, Luca Frediani and contributors.
 *
 * This file is part of MRCPP.
 *
 * MRCPP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MRCPP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with MRCPP.  If not, see <https://www.gnu.org/licenses/>.
 *
 * For information on the complete list of contributors to MRCPP, see:
 * <https://mrcpp.readthedocs.io/>
 */

// THIS FILE HAS BEEN AUTOGENERATED, DO NOT TOUCH

#include "FilterData.h"

#include <Eigen/Core>


namespace mrcpp {
namespace detail {
auto get_I_H0_10() noexcept -> Eigen::Matrix<double, 11, 11> {
  return (Eigen::Matrix<double, 11, 11>() << 0.898130597437513, 0.430330902422862, -0.0660020862571561, -0.0324754077032538, 0.0413392419480917, -0.00724007895958494, -0.0194091828447783, 0.00550329911373926, 0.0125459282202183, 0.00568479328446756, 0.000743889077780281, -0.213110834108151, 0.588196393979881, 0.755606353906318, 0.123890032697138, -0.125188486824536, 0.0198988919981945, 0.0507185205542969, -0.013968070154532, -0.0312910851158743, -0.0140337902675114, -0.0018269558825249, 0.124302251471957, -0.230392084745269, 0.182244360826177, 0.795420225223763, 0.490113428114818, -0.0495319038514761, -0.10734624235591, 0.0272985000709884, 0.0585227633877563, 0.0256092944997842, 0.00329397137396491, -0.0856684561756494, 0.144886693712668, -0.088902198206225, -0.121640305085212, 0.505515772924883, 0.746748704455525, 0.318464723723968, -0.0600121230129077, -0.113423322047138, -0.0466489699487648, -0.005831576719974, 0.0630465185108862, -0.102798519517351, 0.0581911400395117, 0.0672519060828052, -0.180389222880908, 0.0697155186637821, 0.576982972461994, 0.647629013127848, 0.364687266223438, 0.114114622961138, 0.0129093326424672, -0.0476285496705198, 0.0762538524687728, -0.0415994228620635, -0.0450535224529671, 0.107779624468508, -0.0333678368247118, -0.156972105321793, 0.0813652469325032, 0.377848112450911, 0.447140369641669, 0.318531674851334, 0.036043528780301, -0.0571151944013655, 0.0305430549284832, 0.0320221992360583, -0.0728543600486181, 0.0208778653778263, 0.0869742300289525, -0.0369421564614922, -0.121379183940539, -0.0745829046945025, -0.0119071050997675, -0.0266976888642722, 0.0420442057571837, -0.0222214929671259, -0.0228747347554238, 0.050678048730419, -0.0139928014017686, -0.0554111460434728, 0.0220157622868838, 0.0666249824561274, 0.037495503438817, 0.00559201896480958, 0.0187228698710838, -0.0293728809370535, 0.0154141837425825, 0.0156959245434126, -0.0342489710841256, 0.00926703932494786, 0.0357621648645615, -0.0137729477866468, -0.0402674305874331, -0.0219324943321077, -0.00319719602891322, -0.0115918327424413, 0.0181442130814737, -0.00948167705194534, -0.00959411977144193, 0.0207538585474286, -0.00555282571285061, -0.0211345901306437, 0.00801045382646927, 0.0230289057615918, 0.0123539946015835, 0.00178266014482084, 0.00496952193728502, -0.00776962046180064, 0.00405158814900009, 0.00408668233330398, -0.00880238887631017, 0.00234227176332533, 0.00885613231893059, -0.00333164079739855, -0.00950457216528809, -0.0050642970888631, -0.000727515375633081).finished();
}
} // namespace mrcpp
} // namespace detail
