/*
 * MRCPP, a numerical library based on multiresolution analysis and
 * the multiwavelet basis which provide low-scaling algorithms as well as
 * rigorous error control in numerical computations.
 * Copyright (C) 2019 Stig Rune Jensen, Jonas Juselius, Luca Frediani and contributors.
 *
 * This file is part of MRCPP.
 *
 * MRCPP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MRCPP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with MRCPP.  If not, see <https://www.gnu.org/licenses/>.
 *
 * For information on the complete list of contributors to MRCPP, see:
 * <https://mrcpp.readthedocs.io/>
 */

// THIS FILE HAS BEEN AUTOGENERATED, DO NOT TOUCH

#include "FilterData.h"

#include <Eigen/Core>


namespace mrcpp {
namespace detail {
auto get_L_G0_10() noexcept -> Eigen::Matrix<double, 11, 11> {
  return (Eigen::Matrix<double, 11, 11>() << 0.0695453840939869, 0.120456138682678, 0.140697900988298, 0.0963808429807962, -0.0645778566587021, -0.291065835282571, -0.208957873602256, 0.493804876402951, -0.266261324079826, 0.0649588502690164, -0.00758802349632078, 3.6745362706923e-68, -0.0179409066807431, -0.0694848327903795, -0.153012297620643, -0.220111480159701, -0.143142586615585, 0.180510381278339, 0.371751672089395, -0.441314970123832, 0.188126215358685, -0.039555981143553, 0.0592363103432655, 0.102600299167454, 0.123425366129516, 0.1032961302672, 0.00643340478975442, -0.168184087365804, -0.275066440817059, -0.0081190804256765, 0.45518309535779, -0.363842490854998, 0.128189609146893, -3.04705940161768e-67, -0.0133705655534652, -0.0517839777179452, -0.116356419625834, -0.182478485662475, -0.177734876478498, -0.00603803797757294, 0.275417777068006, 0.201120294025607, -0.47064217690257, 0.284372829253447, 0.0535216692036052, 0.0927022503665387, 0.113563582111631, 0.105431106363779, 0.0427057080338059, -0.0882457560722658, -0.228716795670388, -0.193890834223619, 0.162143135477166, 0.365319804536886, -0.453060970710558, 6.06182687394058e-67, -0.0113991489495188, -0.0441487140424239, -0.100557166842546, -0.166342803436241, -0.194843109840055, -0.108914161690774, 0.124469037296297, 0.319982790793915, 0.0539795070473811, -0.538068612254463, -0.0581003036574986, -0.100632677869968, -0.125099551604095, -0.125223109819501, -0.080235943917255, 0.0288090605695263, 0.183611348705345, 0.279057603856599, 0.135124956388181, -0.279191283496872, -0.490006249842694, 4.04107608047832e-67, 0.0109203683039434, 0.0422944045756242, 0.097637661557597, 0.169706665552446, 0.229621252277138, 0.220016360616413, 0.0754144520608128, -0.201599709739908, -0.436954383967811, -0.34837684905657, -0.0704498935794743, -0.12202279506747, -0.154144282832189, -0.166358282134883, -0.1442823910467, -0.068639166350914, 0.0706468697561107, 0.249966711292477, 0.390468780131502, 0.381614344777228, 0.193941370348083, 9.92541496448033e-68, -0.00955497517822956, -0.0370062597387083, -0.0867236719212112, -0.158757326897541, -0.245014253055384, -0.324949361259583, -0.365483819865824, -0.332953285490654, -0.221520404340857, -0.081747666932912, 0.10359615879884, 0.179433810508564, 0.230710206912506, 0.268541299016661, 0.292062712041121, 0.29637568216105, 0.275584628986549, 0.226878876755555, 0.155827356111509, 0.079757393163726, 0.0229395468045778).finished();
}
} // namespace mrcpp
} // namespace detail
