/*
 * MRCPP, a numerical library based on multiresolution analysis and
 * the multiwavelet basis which provide low-scaling algorithms as well as
 * rigorous error control in numerical computations.
 * Copyright (C) 2019 Stig Rune Jensen, Jonas Juselius, Luca Frediani and contributors.
 *
 * This file is part of MRCPP.
 *
 * MRCPP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MRCPP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with MRCPP.  If not, see <https://www.gnu.org/licenses/>.
 *
 * For information on the complete list of contributors to MRCPP, see:
 * <https://mrcpp.readthedocs.io/>
 */

// THIS FILE HAS BEEN AUTOGENERATED, DO NOT TOUCH

#include "FilterData.h"

#include <Eigen/Core>


namespace mrcpp {
namespace detail {
auto get_L_G0_9() noexcept -> Eigen::Matrix<double, 10, 10> {
  return (Eigen::Matrix<double, 10, 10>() << 4.48028625914742e-72, -0.0255777482388237, -0.0990621929624502, -0.210503125146165, -0.253154054244846, 0.0104952126510929, 0.490608458704618, -0.359502526575565, 0.104378090520484, -0.0137934117450112, 0.0695493887309796, 0.120463074917415, 0.14070600280593, 0.0963863928860015, -0.0645815752501953, -0.291082595748078, -0.208969906038937, 0.493833311205648, -0.266276656225331, 0.0649625907992928, 5.01764366406838e-70, 0.0179676449726446, 0.0695883897496198, 0.153240758123112, 0.220442842618909, 0.143367659836025, -0.180766642629617, -0.372354382446131, 0.442012821524356, -0.188422019522499, 0.0600969132163766, 0.104090907068822, 0.125226851161406, 0.104846094724565, 0.00666957652297663, -0.170442311878614, -0.27928818744669, -0.00923284951943497, 0.463380177395335, -0.370102128292583, 2.06336170844039e-69, -0.0141766533894945, -0.054905942482467, -0.123443000635784, -0.194048555860885, -0.190650234799113, -0.0108364519699476, 0.29158669971152, 0.23066013774429, -0.518844389222819, 0.061825746585251, 0.107085334301533, 0.131477462842683, 0.123528959514926, 0.054671653288132, -0.0924251883137656, -0.25990377165314, -0.249677227887537, 0.139170988700743, 0.539792481712323, -2.20750389443404e-69, -0.0133475171279177, -0.0516947115496433, -0.118338593246818, -0.199488974442548, -0.247433444106953, -0.176857335792484, 0.0773147289209734, 0.403957976370276, 0.426248972480882, 0.0751973000625467, 0.130245544300333, 0.163341276003924, 0.170526599796505, 0.130939192440972, 0.0203151545067935, -0.163221495163531, -0.358668304344965, -0.427241532923656, -0.257379984592181, 7.93702543248786e-70, -0.0117970395645447, -0.0456897377680315, -0.106735478516165, -0.193328295713621, -0.290991615491048, -0.366618714800346, -0.373047290429374, -0.278093697547176, -0.115841260276673, 0.111154188252271, 0.192524701527009, 0.247219185509919, 0.286223068194521, 0.306988572573322, 0.302386479720596, 0.26537853616887, 0.195946684919057, 0.108883370572502, 0.0343800712548984).finished();
}
} // namespace mrcpp
} // namespace detail
