/*
 * MRCPP, a numerical library based on multiresolution analysis and
 * the multiwavelet basis which provide low-scaling algorithms as well as
 * rigorous error control in numerical computations.
 * Copyright (C) 2019 Stig Rune Jensen, Jonas Juselius, Luca Frediani and contributors.
 *
 * This file is part of MRCPP.
 *
 * MRCPP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MRCPP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with MRCPP.  If not, see <https://www.gnu.org/licenses/>.
 *
 * For information on the complete list of contributors to MRCPP, see:
 * <https://mrcpp.readthedocs.io/>
 */

// THIS FILE HAS BEEN AUTOGENERATED, DO NOT TOUCH

#include "FilterData.h"

#include <Eigen/Core>


namespace mrcpp {
namespace detail {
auto get_L_H0_10() noexcept -> Eigen::Matrix<double, 11, 11> {
  return (Eigen::Matrix<double, 11, 11>() << 0.707106781186548, 3.81668334298582e-79, -2.82434567380951e-77, 1.52667333719433e-78, -2.36634367265121e-77, 0, 1.06867133603603e-77, -3.81668334298582e-79, 1.34347253673101e-76, 0, 7.42344910210742e-76, -0.612372435695794, 0.353553390593274, 2.27689015679998e-77, -1.45988137869208e-77, 2.19936377639558e-77, 3.57336977987047e-77, -8.68295460529274e-78, -3.61809653779609e-77, -1.15305581932236e-76, -4.26752906287602e-77, -6.4077044296167e-76, -1.58392358733911e-77, -0.684653196881458, 0.176776695296637, 2.82434567380951e-77, 0, -6.64102901679532e-77, -2.29001000579149e-77, 7.02269735109391e-77, 5.95402601505788e-77, 8.16770235398965e-77, 2.58961964821588e-76, 0.233853586673371, 0.405046293650491, -0.522912516583797, 0.0883883476483184, -8.22972345831317e-78, 4.10532002079912e-77, 6.68158127731455e-77, -3.37060847727435e-77, -1.34025221016036e-76, -6.34642877125861e-77, -5.19885943424179e-76, -2.21367633893177e-77, 0.153093108923949, 0.592927061281571, -0.350780380010057, 0.0441941738241592, 1.45033967033461e-77, -8.01503502027022e-77, -3.2823476749678e-77, 1.96177523829471e-76, 2.90067934066922e-77, 8.89668887249994e-76, -0.146575492494482, -0.253876200144874, -0.163876382526586, 0.581703452155821, -0.219863238741723, 0.0220970869120796, 3.49703611301076e-77, 6.19018329690512e-77, -1.10278294341396e-76, -1.37162057638553e-77, -5.43173675384116e-76, -3.47318184211709e-77, -0.0689981317681863, -0.26722861525761, -0.421585548851001, 0.478033079399324, -0.132121363478811, 0.0110485434560398, -9.54170835746455e-78, -3.62584917583653e-77, -9.16004002316596e-78, -3.91210042656046e-77, 0.106977062012728, 0.185289706650491, 0.181798066847189, -0.0566069404148025, -0.534885310063639, 0.3548027758708, -0.0771422564770762, 0.0055242717280199, 3.69741198851751e-77, -2.38542708936614e-78, 1.21656781557673e-77, 2.8796875822828e-76, 0.0394511911654769, 0.152793806371937, 0.301313449619951, 0.204994402553155, -0.528802957971469, 0.246372609862836, -0.0441077726196727, 0.00276213586400995, -1.14882168623873e-76, 4.90634643740827e-76, -0.0842790976968415, -0.145975679226991, -0.161531821313557, -0.0637090094933597, 0.216717679791878, 0.39931734961447, -0.455808912293701, 0.163205770906627, -0.0248208301311305, 0.00138106793200498, -1.44091723333161e-76, -3.72317460108267e-76, -0.0255777360424, -0.0990621457259044, -0.210503024770429, -0.253153933531557, 0.0104952076465843, 0.490608224764219, -0.359502355151361, 0.10437804074912, -0.0137934051677984, 0.000690533966002488).finished();
}
} // namespace mrcpp
} // namespace detail
